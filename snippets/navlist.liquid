{% comment %}
  This component is just a standard list of navigation items. It acts recursively
  so that navigation can be nested. This navigation is always a submenu of another
  parent navigation link.

  @param menu_list {LinkedList}
    The list of links

  @param depth {Number}
    The starting depth to use for the class names.

  @param max_depth {Number}
    The maximum depth to traverse.

  @param aria_expanded {Bool}
    a11y helper

  @param menu_title {String}
    Menu title must be passed in

  @param show_arrows {Bool}
    Option to display dropdown arrows.

  @param arrow_icons {Array}
    Array of arrow_icon strings to apply different icons
    to different depths of menus, mapped to Array[depth - 1].

  @param is_mobile {Bool}
    This is true if the navlist is to be presented on the mobile nav.

  @param show_prod_count {Bool}
    This is true on collection pages when the product count should be 
    displayed on collection links

{% endcomment %}

{% assign show_collection_prod_count = show_prod_count | default: false %}

{% if is_mobile == blank %}
  {% assign is_mobile = false %}
{% endif %}

<ul
  class="navmenu navmenu-depth-{{ depth }} {% if depth > 1 %}navmenu-submenu{% endif %}"
  data-navmenu
  {% if depth > 1 %}data-navmenu-submenu{% endif %}
  {% if menu_title %}aria-label="{{ menu_title }}"{% endif %}
  data-menu="{{menu.handle}}"
>
  {% for menu_item in menu_list %}
    {% if menu_item.type == 'collection_link' %}
      {% assign collectionmenu = menu_item.object %}
      {% if collectionmenu.products.size == 0 %}
        {% continue %}
      {% endif %}
    {% endif %}
    {% assign d = depth | plus: 1 %}

    {% assign show_subnav = true %}
    {% if d > max_depth or linklists[menu_item.handle] == blank %}
      {% assign show_subnav = false %}
    {% endif %}

    {% assign product_count = false %}
    {% if show_collection_prod_count and menu_item.type == 'collection_link' or menu_item.type == 'catalog_link' %} 
      {% if menu_item.type == 'collection_link' %}
        {% capture product_count %}
          ({{ menu_item.object.products_count }})
        {% endcapture %}
      {% else if menu_item.type == 'catalog_link' %}
        {% capture product_count %}
          ({{ shop.products_count }})
        {% endcapture %}
      {% endif %}
    {% endif %}

    {% unless show_subnav %}
		{% if menu_item.handle == 'tous-les-produits-brand' %}

          <li
            class="navmenu-item navmenu-id-{{ menu_item.handle }}"
          >
            <a
              class="navmenu-link {% if menu_item.active %}navmenu-link-active{% endif %}"
              href="{{ menu_item.url }}"
            >
                  <span data-i18n="custom.product.all">{{ 'custom.product.all' | t }}</span>
              {%- if product_count -%}
                {{ product_count }}
              {%- endif -%}
            </a>
          </li>
          {% for product_vendor in shop.vendors %}
          <li class="navmenu-item">{{ product_vendor | link_to_vendor  | replace: '<a', '<a class="navmenu-link navmenu-link-parent"'}}</li>
          {% endfor %}
    
      	{% else %}
    	
      <li
        class="navmenu-item navmenu-id-{{ menu_item.handle }}"
      >
        <a
          class="navmenu-link {% if menu_item.active %}navmenu-link-active{% endif %}"
          href="{{ menu_item.url }}"
        >
          <span data-i18n='{% render 'translationData' with  menu_item.title  %}'>{% render 'translationText' with  menu_item.title  %}</span>
          {%- if product_count -%}
            {{ product_count }}
          {%- endif -%}
        </a>
      </li>
  	{% endif %}
    {% else %}
      {%- capture navmenu_item_classes -%}
        navmenu-item
        navmenu-item-parent
        navmenu-id-{{ menu_item.handle }}
      {%- endcapture -%}

      <li
        class="{{ navmenu_item_classes | strip_newlines }}"
        data-navmenu-parent
      >
        <a
          class="navmenu-link navmenu-link-parent {% if menu_item.active %}navmenu-link-active{% endif %}"
          href="{{ menu_item.url }}"
          {% if aria_expanded %}
            aria-expanded="true"
          {% else %}
            aria-haspopup="true"
            aria-expanded="false"
          {% endif %}
        >
          <span data-i18n='{% render 'translationData' with  menu_item.title  %}'>{% render 'translationText' with  menu_item.title  %}</span>
          {%- if product_count -%}
            {{ product_count }}
          {%- endif -%}

          {% if show_arrows and is_mobile != true %}
            <span
              class="navmenu-icon navmenu-icon-depth-{{ depth }}"
              data-navmenu-trigger
            >
              {% assign submenu_arrow_index = depth | minus: 1 %}
              {% include 'icon-chevron-down-small' %}
            </span>
          {% endif %}
        </a>

        {% if show_arrows and is_mobile == true %}
          {% include
            'mobile-navmenu-button',
            button_label: menu_item.title
          %}
        {% endif %}

        {% unless d > max_depth %}
          {%
            include 'navlist',
            menu_list: linklists[menu_item.handle].links,
            depth: d,
            max_depth: max_depth,
            show_arrows: show_arrows,
            aria_expanded: aria_expanded,
            arrow_icons: arrow_icons,
            is_mobile: is_mobile,
            show_collection_product_count: show_collection_prod_count
          %}
        {% endunless %}
      </li>
    {% endunless %}
  {% endfor %}
</ul>
