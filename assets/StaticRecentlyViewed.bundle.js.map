{"version":3,"sources":["webpack:///./source/scripts/sections/StaticRecentlyViewed.js","webpack:///./node_modules/shopify-currency-converter/dist/index.js"],"names":["StaticRecentlyViewed","section","namespace","maxRecentlyViewed","maxStorageTime","version","storageKey","$el","$","el","time","data","flickity","recentlyViewed","recently_viewed_info","cardSettings","product_card_settings","timestamp","Math","round","Date","getTime","slideImageLoaded","_onSlideImageLoaded","bind","_getRecentlyViewed","removeRecentlyViewed","handle","push","promises","_setRecentlyViewed","when","done","length","cardsMarkup","_getRecentlyViewedCards","cardsData","find","append","each","index","CurrencyConverter","update","forEach","productData","timeSince","prepend","rimg","watch","$carousel","slides","_initSlider","addClass","bindEvents","on","event","$target","currentTarget","closest","parents","nextAll","setTimeout","removeClass","remove","selectCell","clearRecentlyViewed","now","secondsPast","secondsAgo","parseInt","second","ago","seconds","minutesAgo","minute","minutes","hoursAgo","hour","hours","date","currentDate","day","getDate","month","toDateString","match","replace","year","getFullYear","i","splice","cards","sessionStorage","getItem","JSON","parse","setItem","stringify","removeEventListener","localStorage","removeItem","resize","flickityOptions","autoPlay","accessibility","cellAlign","cellSelector","groupCells","pageDots","contain","arrowShape","x0","x1","y1","x2","y2","x3","Flickity","addEventListener","floor","minStorageTimestamp","filteredData","filter","item","removeCount","error","console","warn","handles","map","x","storedCards","Object","keys","key","fetchUrl","get","catch","then","response","orderedItems","markup","cardKey","domParser","DOMParser","card","parseFromString","querySelector","join"],"mappings":"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AAQ;AAC9C,GAAG;AACH;AACA,2BAA2B,6BAA6B;AACxD,yCAAyC,6BAA6B;AACtE,GAAG;AACH;AACA,uBAAuB,yCAAyC,OAAO;AACvE,qCAAqC,yCAAyC;AAC9E,GAAG;AACH;AACA,uBAAuB,oBAAoB;AAC3C,qCAAqC,oBAAoB;AACzD,GAAG;AACH;AACA,0BAA0B,QAAQ;AAClC,wCAAwC,QAAQ;AAChD,GAAG;AACH;AACA,wBAAwB,yCAAyC;AACjE,wCAAwC,yCAAyC;AACjF;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,EAAE,aAAa,EAAE;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,yBAAyB;AACzB,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,0BAA0B;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA,uBAAuB,wBAAwB;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;AAEA;AACA","file":"StaticRecentlyViewed.bundle.js","sourcesContent":["import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport Flickity from 'flickity';\nimport rimg from 'rimg-shopify';\n\nexport default class StaticRecentlyViewed {\n  constructor(section) {\n    this.namespace = 'pxu';\n    this.maxRecentlyViewed = 30; // Store a max of 30 items\n    this.maxStorageTime = 30 * 24 * 3600; // Store items for 30 days only\n    this.version = 1; // Version key is used to update localstorage when format changes\n    this.storageKey = `${this.namespace}-recentlyViewed-${this.version}`;\n    this.$el = $(section.el);\n    this.time = section.data.time;\n    this.flickity = null;\n\n    this.recentlyViewed = section.data.recently_viewed_info;\n    this.cardSettings = section.data.product_card_settings;\n\n    if (this.recentlyViewed && this.time) {\n      this.recentlyViewed.timestamp = Math.round((new Date()).getTime() / 1000);\n    }\n\n    this.slideImageLoaded = this._onSlideImageLoaded.bind(this);\n\n    let recentlyViewed = [];\n\n    if (this.time) {\n      recentlyViewed = this._getRecentlyViewed();\n      if (this.recentlyViewed) {\n        this.removeRecentlyViewed(this.recentlyViewed.handle, recentlyViewed);\n\n\n        recentlyViewed.push(this.recentlyViewed);\n      }\n\n      const promises = this._setRecentlyViewed(recentlyViewed);\n\n      // Wait until promises are resolved before inserting markup into the DOM\n      $.when(...promises).done(() => {\n        if (recentlyViewed.length) {\n          const cardsMarkup = this._getRecentlyViewedCards();\n          const cardsData = this._getRecentlyViewed();\n          this.$el.find('[data-recently-viewed-container]').append(cardsMarkup);\n          this.$el.find('.money').each((index, el) => CurrencyConverter.update(el));\n\n          cardsData.forEach(productData => {\n            const timestamp = this.timeSince(productData.timestamp);\n            $(`[data-product-handle=${productData.handle}]`)\n              .prepend(timestamp);\n          });\n\n          rimg.watch(this.$el[0]);\n          this.$carousel = this.$el.find('.product-recently-viewed--content');\n          this.slides = '.product-recently-viewed-card';\n\n          if (this.$carousel.find(this.slides).length > 1) {\n            this._initSlider();\n          }\n        } else {\n          this.$el.find('.product-recently-viewed--section').addClass('hide');\n        }\n      });\n    } else {\n      if (this.recentlyViewed) {\n        recentlyViewed.push(this.recentlyViewed);\n        this._setRecentlyViewed(recentlyViewed);\n      }\n\n      this.$el.find('.product-recently-viewed--section').addClass('hide');\n    }\n\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.$el.on('click', '[data-remove-recently-viewed]', event => {\n      const $target = $(event.currentTarget);\n      const handle = $target.closest('[data-product-handle]').data('product-handle');\n      const recentlyViewed = this._getRecentlyViewed();\n\n      this.removeRecentlyViewed(handle, recentlyViewed);\n      this._setRecentlyViewed(recentlyViewed);\n\n      $target.parents('[data-recently-viewed-card]').addClass('hide-card');\n      $target.parents('[data-recently-viewed-card]').nextAll().addClass('move-card');\n\n      setTimeout(() => {\n        let index = $target.parents('[data-recently-viewed-card]').index();\n        if (index !== 0) {\n          index--;\n        }\n\n        $target.parents('[data-recently-viewed-card]').nextAll().removeClass('move-card');\n        if ($target.parents('[data-recently-viewed-card]').length) {\n          this.flickity.remove($target.parents('[data-recently-viewed-card]'));\n        }\n        this.flickity.selectCell(index);\n      }, 500);\n    });\n\n    this.$el.on('click', '[data-clear-recently-viewed]', () => {\n      this.clearRecentlyViewed();\n    });\n  }\n\n  timeSince(timestamp) {\n    const now = Math.round((new Date()).getTime() / 1000);\n    const secondsPast = now - timestamp;\n\n    if (secondsPast < 60) {\n      const secondsAgo = parseInt(secondsPast, 10);\n\n      return secondsAgo === 1\n        ? `${secondsAgo} ${this.time.second} ${this.time.ago}`\n        : `${secondsAgo} ${this.time.seconds} ${this.time.ago}`;\n    }\n\n    if (secondsPast < 3600) {\n      const minutesAgo = parseInt(secondsPast / 60, 10);\n\n      return minutesAgo === 1\n        ? `${minutesAgo} ${this.time.minute} ${this.time.ago}`\n        : `${minutesAgo} ${this.time.minutes} ${this.time.ago}`;\n    }\n\n    if (secondsPast <= 86400) {\n      const hoursAgo = parseInt(secondsPast / 3600, 10);\n\n      return hoursAgo === 1\n        ? `${hoursAgo} ${this.time.hour} ${this.time.ago}`\n        : `${hoursAgo} ${this.time.hours} ${this.time.ago}`;\n    }\n\n    const date = new Date(timestamp * 1000);\n    const currentDate = new Date(now * 1000);\n    const day = date.getDate();\n    const month = date.toDateString().match(/ [a-zA-Z]*/)[0].replace(' ', '');\n    const year = date.getFullYear() === currentDate.getFullYear()\n      ? ''\n      : `, ${date.getFullYear()}`;\n\n    return `${month} ${day} ${year}`;\n  }\n\n  removeRecentlyViewed(handle, recentlyViewed) {\n    for (let i = 0; i < recentlyViewed.length; i++) {\n      if (recentlyViewed[i].handle === handle) {\n        recentlyViewed.splice(i, 1);\n      }\n    }\n    this._setRecentlyViewed(recentlyViewed);\n    const cards = sessionStorage.getItem(this.storageKey)\n      ? JSON.parse(sessionStorage.getItem(this.storageKey))\n      : {};\n\n    delete cards[handle];\n\n    sessionStorage.setItem(this.storageKey, JSON.stringify(cards));\n\n    if (recentlyViewed.length === 0) {\n      this.$el.find('.product-recently-viewed--section').addClass('hide');\n    }\n\n    if (this.$carousel) {\n      this.$carousel[0].removeEventListener('rimg:load', this.slideImageLoaded);\n    }\n  }\n\n  clearRecentlyViewed() {\n    localStorage.removeItem(this.storageKey);\n    sessionStorage.removeItem(this.storageKey);\n    this.$el.find('[data-recently-viewed-card]').remove();\n    this.$el.find('.product-recently-viewed--section').addClass('hide');\n  }\n\n  _onSlideImageLoaded() {\n    this.flickity.resize();\n  }\n\n  _initSlider() {\n    this.flickityOptions = {\n      autoPlay: 0,\n      accessibility: true,\n      cellAlign: 'left',\n      cellSelector: this.slides,\n      groupCells: true,\n      pageDots: false,\n      contain: true,\n      arrowShape: {\n        x0: 10,\n        x1: 60,\n        y1: 50,\n        x2: 65,\n        y2: 45,\n        x3: 20,\n      },\n    };\n\n    this.flickity = new Flickity(this.$carousel[0], this.flickityOptions);\n\n    this.$carousel[0].addEventListener('rimg:load', this.slideImageLoaded);\n  }\n\n  /**\n   * Store recently viewed products\n   *\n   * @param {Object[]} productData - recently viewed products\n   * @param {number} productData[].timestamp - indicating when product was added to productData\n   * @param {string} productData[].handle - Shopify product handle\n   * @private\n   */\n  _setRecentlyViewed(productData) {\n    const now = Math.floor(Date.now() / 1000); // Unix timestamp for current date\n    const minStorageTimestamp = now - this.maxStorageTime;\n    const filteredData = productData.filter(item => item.timestamp > minStorageTimestamp);\n\n    if (filteredData.length > this.maxRecentlyViewed) {\n      const removeCount = filteredData.length - this.maxRecentlyViewed;\n      filteredData.splice(0, removeCount); // Remove oldest if more than max number have been stored\n    }\n\n    try {\n      localStorage.setItem(this.storageKey, JSON.stringify(filteredData));\n    } catch (error) {\n      console.warn(error);\n    }\n\n    // Retrieve markup for recently viewed cards and store in session\n    try {\n      const handles = filteredData\n        ? filteredData.map(x => x.handle)\n        : [];\n      let storedCards = sessionStorage.getItem(this.storageKey)\n        ? JSON.parse(sessionStorage.getItem(this.storageKey))\n        : {};\n\n      if (storedCards.cardSettings) {\n        Object.keys(storedCards.cardSettings).forEach(key => {\n          if (storedCards.cardSettings[key] !== this.cardSettings[key]) {\n            storedCards = {};\n            sessionStorage.removeItem(this.storageKey);\n          }\n        });\n      }\n      storedCards.cardSettings = this.cardSettings;\n      const promises = handles.map(handle => {\n        if (storedCards[handle]) {\n          return null;\n        }\n        const fetchUrl = `/products/${handle}?view=_recently-viewed`;\n        return $.get(fetchUrl)\n          .catch(error => console.error('Error:', error))\n          .then(response => {\n            if (response) {\n              storedCards[handle] = response;\n              try {\n                sessionStorage.setItem(this.storageKey, JSON.stringify(storedCards));\n              } catch (error) {\n                console.warn(error);\n              }\n            }\n          });\n      });\n      return promises;\n    } catch (error) {\n      console.warn(error);\n      return false;\n    }\n  }\n\n  /**\n   * Get stored recently viewed products\n   *\n   * @returns {Array}\n   * @private\n   */\n  _getRecentlyViewed() {\n    try {\n      const recentlyViewed = localStorage.getItem(this.storageKey)\n        ? JSON.parse(localStorage.getItem(this.storageKey))\n        : [];\n\n      return recentlyViewed;\n    } catch (error) {\n      console.warn(error);\n      return [];\n    }\n  }\n\n  _getRecentlyViewedCards() {\n    const cards = sessionStorage.getItem(this.storageKey)\n      ? JSON.parse(sessionStorage.getItem(this.storageKey))\n      : {};\n\n    const orderedItems = localStorage.getItem(this.storageKey)\n      ? JSON.parse(localStorage.getItem(this.storageKey))\n      : {};\n\n    const markup = [];\n\n    for (let i = orderedItems.length - 1; i >= 0; i--) {\n      const cardKey = orderedItems[i].handle;\n\n      // When store password is enabled and viewing the product page in preview\n      // mode, product cards for products which have been deleted from the admin\n      // will return the password page. Before inserting the card markup, we\n      // need to check that it contains a product.\n      const domParser = new DOMParser();\n      const card = domParser.parseFromString(cards[cardKey], 'text/html');\n      if (card.querySelector('.productgrid--item')) {\n        markup.push(cards[cardKey]);\n      }\n    }\n\n    return markup.join('');\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar moneyFormats = {\n  USD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} USD'\n  },\n  EUR: {\n    'money_format': '&euro;{{amount}}',\n    'money_with_currency_format': '&euro;{{amount}} EUR'\n  },\n  GBP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} GBP'\n  },\n  CAD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} CAD'\n  },\n  ALL: {\n    'money_format': 'Lek {{amount}}',\n    'money_with_currency_format': 'Lek {{amount}} ALL'\n  },\n  DZD: {\n    'money_format': 'DA {{amount}}',\n    'money_with_currency_format': 'DA {{amount}} DZD'\n  },\n  AOA: {\n    'money_format': 'Kz{{amount}}',\n    'money_with_currency_format': 'Kz{{amount}} AOA'\n  },\n  ARS: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} ARS'\n  },\n  AMD: {\n    'money_format': '{{amount}} AMD',\n    'money_with_currency_format': '{{amount}} AMD'\n  },\n  AWG: {\n    'money_format': 'Afl{{amount}}',\n    'money_with_currency_format': 'Afl{{amount}} AWG'\n  },\n  AUD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} AUD'\n  },\n  BBD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} Bds'\n  },\n  AZN: {\n    'money_format': 'm.{{amount}}',\n    'money_with_currency_format': 'm.{{amount}} AZN'\n  },\n  BDT: {\n    'money_format': 'Tk {{amount}}',\n    'money_with_currency_format': 'Tk {{amount}} BDT'\n  },\n  BSD: {\n    'money_format': 'BS${{amount}}',\n    'money_with_currency_format': 'BS${{amount}} BSD'\n  },\n  BHD: {\n    'money_format': '{{amount}}0 BD',\n    'money_with_currency_format': '{{amount}}0 BHD'\n  },\n  BYR: {\n    'money_format': 'Br {{amount}}',\n    'money_with_currency_format': 'Br {{amount}} BYR'\n  },\n  BZD: {\n    'money_format': 'BZ${{amount}}',\n    'money_with_currency_format': 'BZ${{amount}} BZD'\n  },\n  BTN: {\n    'money_format': 'Nu {{amount}}',\n    'money_with_currency_format': 'Nu {{amount}} BTN'\n  },\n  BAM: {\n    'money_format': 'KM {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'KM {{amount_with_comma_separator}} BAM'\n  },\n  BRL: {\n    'money_format': 'R$ {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'R$ {{amount_with_comma_separator}} BRL'\n  },\n  BOB: {\n    'money_format': 'Bs{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs{{amount_with_comma_separator}} BOB'\n  },\n  BWP: {\n    'money_format': 'P{{amount}}',\n    'money_with_currency_format': 'P{{amount}} BWP'\n  },\n  BND: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} BND'\n  },\n  BGN: {\n    'money_format': '{{amount}} лв',\n    'money_with_currency_format': '{{amount}} лв BGN'\n  },\n  MMK: {\n    'money_format': 'K{{amount}}',\n    'money_with_currency_format': 'K{{amount}} MMK'\n  },\n  KHR: {\n    'money_format': 'KHR{{amount}}',\n    'money_with_currency_format': 'KHR{{amount}}'\n  },\n  KYD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} KYD'\n  },\n  XAF: {\n    'money_format': 'FCFA{{amount}}',\n    'money_with_currency_format': 'FCFA{{amount}} XAF'\n  },\n  CLP: {\n    'money_format': '${{amount_no_decimals}}',\n    'money_with_currency_format': '${{amount_no_decimals}} CLP'\n  },\n  CNY: {\n    'money_format': '&#165;{{amount}}',\n    'money_with_currency_format': '&#165;{{amount}} CNY'\n  },\n  COP: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} COP'\n  },\n  CRC: {\n    'money_format': '&#8353; {{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#8353; {{amount_with_comma_separator}} CRC'\n  },\n  HRK: {\n    'money_format': '{{amount_with_comma_separator}} kn',\n    'money_with_currency_format': '{{amount_with_comma_separator}} kn HRK'\n  },\n  CZK: {\n    'money_format': '{{amount_with_comma_separator}} K&#269;',\n    'money_with_currency_format': '{{amount_with_comma_separator}} K&#269;'\n  },\n  DKK: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr.{{amount_with_comma_separator}}'\n  },\n  DOP: {\n    'money_format': 'RD$ {{amount}}',\n    'money_with_currency_format': 'RD$ {{amount}}'\n  },\n  XCD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'EC${{amount}}'\n  },\n  EGP: {\n    'money_format': 'LE {{amount}}',\n    'money_with_currency_format': 'LE {{amount}} EGP'\n  },\n  ETB: {\n    'money_format': 'Br{{amount}}',\n    'money_with_currency_format': 'Br{{amount}} ETB'\n  },\n  XPF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}} XPF',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} XPF'\n  },\n  FJD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'FJ${{amount}}'\n  },\n  GMD: {\n    'money_format': 'D {{amount}}',\n    'money_with_currency_format': 'D {{amount}} GMD'\n  },\n  GHS: {\n    'money_format': 'GH&#8373;{{amount}}',\n    'money_with_currency_format': 'GH&#8373;{{amount}}'\n  },\n  GTQ: {\n    'money_format': 'Q{{amount}}',\n    'money_with_currency_format': '{{amount}} GTQ'\n  },\n  GYD: {\n    'money_format': 'G${{amount}}',\n    'money_with_currency_format': '${{amount}} GYD'\n  },\n  GEL: {\n    'money_format': '{{amount}} GEL',\n    'money_with_currency_format': '{{amount}} GEL'\n  },\n  HNL: {\n    'money_format': 'L {{amount}}',\n    'money_with_currency_format': 'L {{amount}} HNL'\n  },\n  HKD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': 'HK${{amount}}'\n  },\n  HUF: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} Ft'\n  },\n  ISK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr ISK'\n  },\n  INR: {\n    'money_format': 'Rs. {{amount}}',\n    'money_with_currency_format': 'Rs. {{amount}}'\n  },\n  IDR: {\n    'money_format': '{{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Rp {{amount_with_comma_separator}}'\n  },\n  ILS: {\n    'money_format': '{{amount}} NIS',\n    'money_with_currency_format': '{{amount}} NIS'\n  },\n  JMD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} JMD'\n  },\n  JPY: {\n    'money_format': '&#165;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#165;{{amount_no_decimals}} JPY'\n  },\n  JEP: {\n    'money_format': '&pound;{{amount}}',\n    'money_with_currency_format': '&pound;{{amount}} JEP'\n  },\n  JOD: {\n    'money_format': '{{amount}}0 JD',\n    'money_with_currency_format': '{{amount}}0 JOD'\n  },\n  KZT: {\n    'money_format': '{{amount}} KZT',\n    'money_with_currency_format': '{{amount}} KZT'\n  },\n  KES: {\n    'money_format': 'KSh{{amount}}',\n    'money_with_currency_format': 'KSh{{amount}}'\n  },\n  KWD: {\n    'money_format': '{{amount}}0 KD',\n    'money_with_currency_format': '{{amount}}0 KWD'\n  },\n  KGS: {\n    'money_format': 'лв{{amount}}',\n    'money_with_currency_format': 'лв{{amount}}'\n  },\n  LVL: {\n    'money_format': 'Ls {{amount}}',\n    'money_with_currency_format': 'Ls {{amount}} LVL'\n  },\n  LBP: {\n    'money_format': 'L&pound;{{amount}}',\n    'money_with_currency_format': 'L&pound;{{amount}} LBP'\n  },\n  LTL: {\n    'money_format': '{{amount}} Lt',\n    'money_with_currency_format': '{{amount}} Lt'\n  },\n  MGA: {\n    'money_format': 'Ar {{amount}}',\n    'money_with_currency_format': 'Ar {{amount}} MGA'\n  },\n  MKD: {\n    'money_format': 'ден {{amount}}',\n    'money_with_currency_format': 'ден {{amount}} MKD'\n  },\n  MOP: {\n    'money_format': 'MOP${{amount}}',\n    'money_with_currency_format': 'MOP${{amount}}'\n  },\n  MVR: {\n    'money_format': 'Rf{{amount}}',\n    'money_with_currency_format': 'Rf{{amount}} MRf'\n  },\n  MXN: {\n    'money_format': '$ {{amount}}',\n    'money_with_currency_format': '$ {{amount}} MXN'\n  },\n  MYR: {\n    'money_format': 'RM{{amount}} MYR',\n    'money_with_currency_format': 'RM{{amount}} MYR'\n  },\n  MUR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} MUR'\n  },\n  MDL: {\n    'money_format': '{{amount}} MDL',\n    'money_with_currency_format': '{{amount}} MDL'\n  },\n  MAD: {\n    'money_format': '{{amount}} dh',\n    'money_with_currency_format': 'Dh {{amount}} MAD'\n  },\n  MNT: {\n    'money_format': '{{amount_no_decimals}} &#8366',\n    'money_with_currency_format': '{{amount_no_decimals}} MNT'\n  },\n  MZN: {\n    'money_format': '{{amount}} Mt',\n    'money_with_currency_format': 'Mt {{amount}} MZN'\n  },\n  NAD: {\n    'money_format': 'N${{amount}}',\n    'money_with_currency_format': 'N${{amount}} NAD'\n  },\n  NPR: {\n    'money_format': 'Rs{{amount}}',\n    'money_with_currency_format': 'Rs{{amount}} NPR'\n  },\n  ANG: {\n    'money_format': '&fnof;{{amount}}',\n    'money_with_currency_format': '{{amount}} NA&fnof;'\n  },\n  NZD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} NZD'\n  },\n  NIO: {\n    'money_format': 'C${{amount}}',\n    'money_with_currency_format': 'C${{amount}} NIO'\n  },\n  NGN: {\n    'money_format': '&#8358;{{amount}}',\n    'money_with_currency_format': '&#8358;{{amount}} NGN'\n  },\n  NOK: {\n    'money_format': 'kr {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'kr {{amount_with_comma_separator}} NOK'\n  },\n  OMR: {\n    'money_format': '{{amount_with_comma_separator}} OMR',\n    'money_with_currency_format': '{{amount_with_comma_separator}} OMR'\n  },\n  PKR: {\n    'money_format': 'Rs.{{amount}}',\n    'money_with_currency_format': 'Rs.{{amount}} PKR'\n  },\n  PGK: {\n    'money_format': 'K {{amount}}',\n    'money_with_currency_format': 'K {{amount}} PGK'\n  },\n  PYG: {\n    'money_format': 'Gs. {{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'Gs. {{amount_no_decimals_with_comma_separator}} PYG'\n  },\n  PEN: {\n    'money_format': 'S/. {{amount}}',\n    'money_with_currency_format': 'S/. {{amount}} PEN'\n  },\n  PHP: {\n    'money_format': '&#8369;{{amount}}',\n    'money_with_currency_format': '&#8369;{{amount}} PHP'\n  },\n  PLN: {\n    'money_format': '{{amount_with_comma_separator}} zl',\n    'money_with_currency_format': '{{amount_with_comma_separator}} zl PLN'\n  },\n  QAR: {\n    'money_format': 'QAR {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'QAR {{amount_with_comma_separator}}'\n  },\n  RON: {\n    'money_format': '{{amount_with_comma_separator}} lei',\n    'money_with_currency_format': '{{amount_with_comma_separator}} lei RON'\n  },\n  RUB: {\n    'money_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}}',\n    'money_with_currency_format': '&#1088;&#1091;&#1073;{{amount_with_comma_separator}} RUB'\n  },\n  RWF: {\n    'money_format': '{{amount_no_decimals}} RF',\n    'money_with_currency_format': '{{amount_no_decimals}} RWF'\n  },\n  WST: {\n    'money_format': 'WS$ {{amount}}',\n    'money_with_currency_format': 'WS$ {{amount}} WST'\n  },\n  SAR: {\n    'money_format': '{{amount}} SR',\n    'money_with_currency_format': '{{amount}} SAR'\n  },\n  STD: {\n    'money_format': 'Db {{amount}}',\n    'money_with_currency_format': 'Db {{amount}} STD'\n  },\n  RSD: {\n    'money_format': '{{amount}} RSD',\n    'money_with_currency_format': '{{amount}} RSD'\n  },\n  SCR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} SCR'\n  },\n  SGD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} SGD'\n  },\n  SYP: {\n    'money_format': 'S&pound;{{amount}}',\n    'money_with_currency_format': 'S&pound;{{amount}} SYP'\n  },\n  ZAR: {\n    'money_format': 'R {{amount}}',\n    'money_with_currency_format': 'R {{amount}} ZAR'\n  },\n  KRW: {\n    'money_format': '&#8361;{{amount_no_decimals}}',\n    'money_with_currency_format': '&#8361;{{amount_no_decimals}} KRW'\n  },\n  LKR: {\n    'money_format': 'Rs {{amount}}',\n    'money_with_currency_format': 'Rs {{amount}} LKR'\n  },\n  SEK: {\n    'money_format': '{{amount_no_decimals}} kr',\n    'money_with_currency_format': '{{amount_no_decimals}} kr SEK'\n  },\n  CHF: {\n    'money_format': 'SFr. {{amount}}',\n    'money_with_currency_format': 'SFr. {{amount}} CHF'\n  },\n  TWD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TWD'\n  },\n  THB: {\n    'money_format': '{{amount}} &#xe3f;',\n    'money_with_currency_format': '{{amount}} &#xe3f; THB'\n  },\n  TZS: {\n    'money_format': '{{amount}} TZS',\n    'money_with_currency_format': '{{amount}} TZS'\n  },\n  TTD: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}} TTD'\n  },\n  TND: {\n    'money_format': '{{amount}}',\n    'money_with_currency_format': '{{amount}} DT'\n  },\n  TRY: {\n    'money_format': '{{amount}}TL',\n    'money_with_currency_format': '{{amount}}TL'\n  },\n  UGX: {\n    'money_format': 'Ush {{amount_no_decimals}}',\n    'money_with_currency_format': 'Ush {{amount_no_decimals}} UGX'\n  },\n  UAH: {\n    'money_format': '₴{{amount}}',\n    'money_with_currency_format': '₴{{amount}} UAH'\n  },\n  AED: {\n    'money_format': 'Dhs. {{amount}}',\n    'money_with_currency_format': 'Dhs. {{amount}} AED'\n  },\n  UYU: {\n    'money_format': '${{amount_with_comma_separator}}',\n    'money_with_currency_format': '${{amount_with_comma_separator}} UYU'\n  },\n  VUV: {\n    'money_format': '${{amount}}',\n    'money_with_currency_format': '${{amount}}VT'\n  },\n  VEF: {\n    'money_format': 'Bs. {{amount_with_comma_separator}}',\n    'money_with_currency_format': 'Bs. {{amount_with_comma_separator}} VEF'\n  },\n  VND: {\n    'money_format': '{{amount_no_decimals_with_comma_separator}}&#8363;',\n    'money_with_currency_format': '{{amount_no_decimals_with_comma_separator}} VND'\n  },\n  XBT: {\n    'money_format': '{{amount_no_decimals}} BTC',\n    'money_with_currency_format': '{{amount_no_decimals}} BTC'\n  },\n  XOF: {\n    'money_format': 'CFA{{amount}}',\n    'money_with_currency_format': 'CFA{{amount}} XOF'\n  },\n  ZMW: {\n    'money_format': 'K{{amount_no_decimals_with_comma_separator}}',\n    'money_with_currency_format': 'ZMW{{amount_no_decimals_with_comma_separator}}'\n  }\n};\n\n/**\n * Format a number to a specific format\n *\n * @param {Number} number - Value to format\n * @param {Number} precision - Amount of decimal points to show\n * @param {String} thousands - Thousands delimiter\n * @param {String} decimal - Decimal delimiter\n * @returns {String|Number}\n */\nfunction formatWithDelimiters(number) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n  if (isNaN(number) || !number) {\n    return 0;\n  }\n\n  var preciseNumber = (number / 100.0).toFixed(precision);\n\n  var parts = preciseNumber.split(thousands);\n  var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n  var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n  return dollarsAmount + centsAmount;\n}\n\n/**\n * Convert a money value in cents to a formatted currency string\n *\n * @param {Number|String} cents\n * @param {String} format\n * @returns {String}\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n\n  switch (format.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2, ',', '.');\n      break;\n    case 'amount_with_space_separator':\n      value = formatWithDelimiters(cents, 2, ' ', '.');\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_with_apostrophe_separator':\n      value = formatWithDelimiters(cents, 2, '\\'', '.');\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n    case 'amount_no_decimals_with_space_separator':\n      value = formatWithDelimiters(cents, 0, ' ', '.');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, ',', '.');\n      break;\n  }\n\n  return format.replace(placeholderRegex, value);\n}\n\n/**\n * Return the value of money in cents value\n *\n * @param {Number} moneyAmount - Money value of a price\n *                 eg: 1000\n * @param {String} format - Shop formatting of a price\n *                 eg: {{amount}}\n * @param {String} currency - Currency of a price\n *                 eg: 'CAD'\n * @returns {Number}\n * @private\n */\nfunction getCentsValue(moneyAmount, format, currency) {\n  var cents = 0;\n  // Convert prices from float values to integers if needed, then convert\n  if (format.indexOf('amount_no_decimals') !== -1) {\n    cents = moneyAmount * 100;\n  } else if (currency === 'JOD' || currency === 'KWD' || currency === 'BHD') {\n    cents = moneyAmount / 10;\n  } else {\n    cents = moneyAmount;\n  }\n\n  return cents;\n}\n\n/**\n * Converts formatted money to a number\n *\n * @param {Element} priceEl\n * @returns {Number|String}\n */\nfunction getMoneyValue(priceEl) {\n  var price = priceEl.getAttribute('data-currency-original') || priceEl.textContent;\n  var value = parseInt(price.replace(/[^0-9]/g, ''), 10);\n\n  return !isNaN(value) ? value : '';\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar CurrencyConverter = function () {\n  function CurrencyConverter() {\n    classCallCheck(this, CurrencyConverter);\n\n    this.defaults = {\n      switcherSelector: '[data-currency-converter]',\n      priceSelector: '.money',\n      shopCurrency: '',\n      defaultCurrency: '',\n      displayFormat: '',\n      moneyFormat: '',\n      moneyFormatNoCurrency: '',\n      moneyFormatCurrency: ''\n    };\n\n    this.options = {};\n    this.moneyFormats = moneyFormats;\n    this.storage = 'currency';\n    this.currentCurrency = null;\n    this.isInitialised = false;\n  }\n\n  /**\n   * Initialize CurrencyConverter\n   *\n   * @param settings\n   * @property {Object} settings\n   *                    Configuration for CurrencyConverter\n   * @property {String} settings.switcherSelector\n   *                    CSS Selector for dropdown(s) which controls currency conversion\n   * @property {String} settings.priceSelector\n   *                    CSS Selector for elements containing prices\n   * @property {String} settings.shopCurrency\n   *                    Shop's currency (The currency used to process transactions)\n   * @property {String} settings.defaultCurrency\n   *                    Theme's currency setting, or initial currency to show on the page\n   * @property {String} settings.displayFormat\n   *                    `money_with_currency_format` or `money_format`\n   * @property {String} settings.moneyFormat\n   *                    Shop's currency formatted using the selected display format\n   * @property {String} settings.moneyFormatNoCurrency\n   *                    Shop's currency formatted without showing currency code\n   * @property {String} settings.moneyFormatCurrency\n   *                    Shop's currency formatted showing currency code\n   */\n\n\n  createClass(CurrencyConverter, [{\n    key: 'init',\n    value: function init(settings) {\n      var _this = this;\n\n      if (!window.Currency || this.isInitialised) return;\n\n      Object.keys(this.defaults).forEach(function (key) {\n        _this.options[key] = settings[key] || _this.defaults[key];\n      });\n\n      this.currentCurrency = this._getStoredCurrency() || this.options.defaultCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_with_currency_format = this.options.moneyFormatCurrency;\n      this.moneyFormats[this.options.shopCurrency].money_format = this.options.moneyFormatNoCurrency;\n\n      this.isInitialised = true;\n      this._current();\n    }\n\n    /**\n     * Change the currency to a new currency using an ISO currency code\n     *\n     * @param {String} newCurrency - New currency to convert prices to\n     */\n\n  }, {\n    key: 'setCurrency',\n    value: function setCurrency(newCurrency) {\n      if (!this.isInitialised) return;\n\n      this._convertAll(newCurrency);\n    }\n\n    /**\n     * Update a price on the page from shop currency to the active currency, and formatting\n     *\n     * @param priceEl {HTMLElement} - element containing price text, in the shop currency\n     */\n\n  }, {\n    key: 'update',\n    value: function update(priceEl) {\n      if (!this.isInitialised) return;\n\n      // unset any stored previous conversions and the data-currency attribute itself\n      var attributes = priceEl.attributes;\n      for (var attr = 0; attr < attributes.length; attr++) {\n        var attribute = attributes[attr];\n\n        if (attribute.name.indexOf('data-currency') === 0) {\n          priceEl.setAttribute(attribute.name, '');\n        }\n      }\n\n      this._convertEl(priceEl, this.currentCurrency);\n    }\n\n    /**\n     * Return the stored currency from the client's browser\n     * @returns {String}\n     * @private\n     */\n\n  }, {\n    key: '_getStoredCurrency',\n    value: function _getStoredCurrency() {\n      try {\n        return localStorage.getItem(this.storage);\n      } catch (error) {\n        console.warn(error);\n        return this.options.defaultCurrency;\n      }\n    }\n\n    /**\n     * Save the client's currency in localstorage for persistence across pages\n     * and sessions\n     * @param {String} currency\n     * @private\n     */\n\n  }, {\n    key: '_setStoredCurrency',\n    value: function _setStoredCurrency(currency) {\n      try {\n        localStorage.setItem(this.storage, currency);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n\n    /**\n     * Update the currency switcher to the current currency\n     * @private\n     */\n\n  }, {\n    key: '_current',\n    value: function _current() {\n      var switchers = document.querySelectorAll(this.options.switcherSelector);\n      for (var i = 0; i < switchers.length; i += 1) {\n        var switcher = switchers[i];\n        var childrenEls = switcher.querySelectorAll('option');\n\n        for (var j = 0; j < childrenEls.length; j += 1) {\n          var optionEl = childrenEls[j];\n\n          if (optionEl.selected && optionEl.value !== this.currentCurrency) {\n            optionEl.selected = false;\n          }\n\n          if (optionEl.value === this.currentCurrency) {\n            optionEl.selected = true;\n          }\n        }\n      }\n\n      this._convertAll(this.currentCurrency);\n    }\n\n    /**\n     * Converts an individual price to the new format\n     *\n     * @param {Element} priceEl - Node element containing price\n     * @param {String} oldCurrency - Currency of element converting from\n     * @param {String} newCurrency - Currency to convert to\n     * @private\n     */\n\n  }, {\n    key: '_convertEl',\n    value: function _convertEl(priceEl, newCurrency) {\n      var oldCurrency = this.options.shopCurrency;\n      // If the amount has already been converted, we leave it alone.\n      if (priceEl.getAttribute('data-currency') === newCurrency) {\n        return;\n      }\n\n      // If we are converting to a currency that we have saved, we will use the saved amount.\n      if (priceEl.getAttribute('data-currency-' + newCurrency)) {\n        priceEl.innerHTML = priceEl.getAttribute('data-currency-' + newCurrency);\n      } else {\n        var oldFormat = this.moneyFormats[oldCurrency][this.options.displayFormat];\n        var newFormat = this.moneyFormats[newCurrency][this.options.displayFormat];\n\n        var moneyValue = getMoneyValue(priceEl);\n        var centsValue = getCentsValue(moneyValue, oldFormat, oldCurrency);\n\n        // Cents value is empty, but not 0. 0$ is a valid price, while empty is not\n        if (centsValue === '') return;\n\n        var cents = window.Currency.convert(centsValue, oldCurrency, newCurrency);\n        var oldPriceFormatted = formatMoney(centsValue, oldFormat);\n        var priceFormatted = formatMoney(cents, newFormat);\n\n        if (!priceEl.getAttribute('data-currency-original')) {\n          priceEl.setAttribute('data-currency-original', oldPriceFormatted);\n        }\n\n        priceEl.setAttribute('data-currency-' + oldCurrency, oldPriceFormatted);\n        priceEl.setAttribute('data-currency-' + newCurrency, priceFormatted);\n        priceEl.innerHTML = priceFormatted;\n      }\n\n      priceEl.setAttribute('data-currency', newCurrency);\n    }\n\n    /**\n     * Convert all prices on the page to the new currency\n     *\n     * @param {String} oldCurrency - Currency of element converting from\n     * @param {String} newCurrency - Currency to convert to\n     * @private\n     */\n\n  }, {\n    key: '_convertAll',\n    value: function _convertAll(newCurrency) {\n      var priceEls = document.querySelectorAll(this.options.priceSelector);\n      if (!priceEls) return;\n\n      this.currentCurrency = newCurrency;\n      this._setStoredCurrency(newCurrency);\n\n      for (var i = 0; i < priceEls.length; i += 1) {\n        this._convertEl(priceEls[i], newCurrency);\n      }\n    }\n  }]);\n  return CurrencyConverter;\n}();\n\nvar singletonInstance = new CurrencyConverter();\n\nexports['default'] = singletonInstance;\nexports.CurrencyConverter = CurrencyConverter;\n"],"sourceRoot":""}