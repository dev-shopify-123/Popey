{"version":3,"sources":["webpack:///./source/scripts/helpers/Quantity.js","webpack:///./source/scripts/Forms.js","webpack:///./source/scripts/templates/Contact.js"],"names":["Quantity","el","$el","$","$inputParent","find","$input","$selectParent","$select","_watchSelect","bind","_watchInput","on","off","event","baseValue","parseInt","currentTarget","value","isNaN","_validateValue","val","trigger","removeClass","addClass","focus","removeAttr","select","attr","Forms","selector","filledClass","fieldSelector","quantityItems","$quantityWrapper","_toggleFilled","_checkFilled","length","each","i","push","forEach","quantityItem","unload","hasClass","target","$target","isFilled","is","toggleClass","e","Contact","$contactContents"],"mappings":"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","file":"Contact.bundle.js","sourcesContent":["export default class Quantity {\n  constructor(el) {\n    this.$el = $(el);\n    this.$inputParent = this.$el.find('.form-field--qty-input');\n    this.$input = this.$el.find('[data-quantity-input]');\n    this.$selectParent = this.$el.find('.form-field--qty-select');\n    this.$select = this.$el.find('[data-quantity-select]');\n\n    this._watchSelect = this._watchSelect.bind(this);\n    this._watchInput = this._watchInput.bind(this);\n\n    this.$select.on('change.quantity', this._watchSelect);\n    this.$input.on('change.quantity', this._watchInput);\n  }\n\n  unload() {\n    this.$el.off('.quantity');\n  }\n\n  _validateValue(event) {\n    const baseValue = parseInt(event.currentTarget.value, 10);\n\n    return isNaN(baseValue) ? 1 : baseValue;\n  }\n\n  _watchSelect(event) {\n    const value = this._validateValue(event);\n\n    // Update input to match select\n    this.$input.val(value).trigger('change');\n\n    // Switch to quantity input when 10 or more\n    if (value >= 10) {\n      this.$inputParent\n        .removeClass('hidden')\n        .addClass('visible');\n\n      this.$input\n        .focus()\n        .removeAttr('tabindex')\n        .select();\n\n      this.$selectParent\n        .removeClass('visible')\n        .addClass('hidden');\n\n      this.$select.attr('tabindex', '-1');\n    }\n  }\n\n  _watchInput(event) {\n    this.$input.val(this._validateValue(event));\n  }\n}\n","import $ from 'jquery';\nimport Quantity from './helpers/Quantity';\n\nexport default class Forms {\n  constructor(el, selector = '.form-field-input') {\n    this.$el = $(el);\n    this.filledClass = 'form-field-filled';\n    this.fieldSelector = selector;\n\n    this.quantityItems = [];\n    this.$quantityWrapper = this.$el.find('[data-quantity-wrapper]');\n\n    this._toggleFilled = this._toggleFilled.bind(this);\n    this.$el.on('focus.forms', this.fieldSelector, this._toggleFilled);\n    this.$el.on('blur.forms', this.fieldSelector, this._toggleFilled);\n\n    this._checkFilled();\n\n    if (this.$quantityWrapper.length) {\n      this.$quantityWrapper.each((i, el) => {\n        this.quantityItems.push(\n          new Quantity(el),\n        );\n      });\n    }\n  }\n\n  unload() {\n    this.$el.off('.forms');\n\n    this.quantityItems.forEach(quantityItem => {\n      quantityItem.unload();\n    });\n  }\n\n  _checkFilled() {\n    this.$el.find(this.fieldSelector).each((i, el) => {\n      if ($(el).hasClass(this.filledClass)) return;\n\n      this._toggleFilled(null, el);\n    });\n  }\n\n  _toggleFilled(event = null, el = false) {\n    const target = event ? event.currentTarget : el;\n    const $target = $(target);\n    const { value } = target;\n\n    let isFilled = value.length > 0;\n\n    try {\n      isFilled = isFilled || $target.is(':-webkit-autofill');\n      $target.toggleClass(this.filledClass, isFilled);\n    } catch (e) {\n      $target.toggleClass(this.filledClass, isFilled);\n    }\n  }\n}\n","import $ from 'jquery';\n\nimport Forms from '../Forms';\n\nexport default class Contact {\n  constructor() {\n    this.$contactContents = $('[data-template-contact]');\n\n    if (this.$contactContents.length) {\n      new Forms(this.$contactContents);\n    }\n  }\n}\n"],"sourceRoot":""}